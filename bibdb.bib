% This file was created with JabRef 2.10.
% Encoding: UTF-8


@Article{agon,
  Title                    = {My fyu book},
  Author                   = {Carlos Agon},
  Journal                  = {The American Naturalist},
  Year                     = {2001},

  Owner                    = {test33},
  Timestamp                = {2015.04.24}
}

@TechReport{Conradi1995,
  Title                    = {Version Models for Software Configuration Management},
  Author                   = {Reidar Conradi and Bernhard Westfechtel},
  Institution              = {ACM Computing Surveys},
  Year                     = {1995},

  Owner                    = {test33},
  Timestamp                = {2015.04.24}
}

@Misc{gecode,
  author = "{Gecode Team}",
  title = "Gecode: Generic Constraint Development Environment",
  year = {2006},
  note = {Available from \texttt{http://www.gecode.org}},
}

@Misc{asgl,
  author = "Kilian Sprotte",
  title = "ASGL: Argumentation Semantics in Gecode and Lisp",
  year = {2015},
  note = {Available from \texttt{https://github.com/kisp/asgl}},
}

@Misc{ecl,
  author = "Juan Jose Garcia-Ripoll and Daniel Kochma\'nski",
  title = "ECL: Embeddable Common-Lisp",
  year = {2001},
  note = {Available from \texttt{http://ecls.sourceforge.net}},
}

@INPROCEEDINGS{Engines:97,
  title = {Programming Constraint Inference Engines},
  year = {1997},
  author = {Christian Schulte},

abstract = {Existing constraint programming systems offer a fixed set
		  of inference engines implementing search strategies
		  such as single, all, and best solution search. This
		  is unfortunate, since new engines cannot be
		  integrated by the user.  The paper presents
		  first-class computation spaces as abstractions with
		  which the user can program inference engines at a
		  high level.  Using computation spaces, the paper
		  covers several inference engines ranging from
		  standard search strategies to techniques new to
		  constraint programming, including limited
		  discrepancy search, visual search, and
		  saturation. Saturation is an inference method for
		  tautology-checking used in industrial practice.
		  Computation spaces have shown their practicability
		  in the constraint programming system Oz.},

  editor = {Gert Smolka},
  booktitle = {Proceedings of the Third International Conference on
		  Principles and Practice of Constraint Programming},
  address = {Schlo\ss{} Hagenberg, Austria},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer-Verlag},
  month = oct,
  volume = {1330},
  pages = {519--533},
  sline = {4308},
  project-key = {C1},
  label = {Engines}
}

@Book{Steele:1990:CLL,
  author =       "Guy L. {Steele, Jr.}",
  title =        "{COMMON LISP}: the language",
  publisher =    pub-DP,
  address =      pub-DP:adr,
  edition =      "Second",
  pages =        "xxiii + 1029",
  year =         "1990",
  ISBN =         "1-55558-041-6 (Digital Press paperback), 1-55558-042-4
		 (Digital Press hardcover), 0-13-152414-3 (Prentice
		 Hall)",
  ISBN-13 =      "978-1-55558-041-4 (Digital Press paperback),
		 978-1-55558-042-1 (Digital Press hardcover),
		 978-0-13-152414-9 (Prentice Hall)",
  LCCN =         "QA76.73.L23S73 1990",
  bibdate =      "Mon Nov 18 14:18:28 MST 1996",
  bibsource =    "http://www.math.utah.edu/pub/tex/bib/common-lisp.bib",
  price =        "US\$38.95 (paperback) US\$44.95 (hardcover)",
  acknowledgement = ack-nhfb,
  keywords =     "COMMON LISP (Computer program language); Lisp (langage
		 de programmation).",
}

@inproceedings{swig,
 author = {Beazley, David M.},
 title = {SWIG: An Easy to Use Tool for Integrating Scripting Languages with C and C++},
 booktitle = {Proceedings of the 4th Conference on USENIX Tcl/Tk Workshop, 1996 - Volume 4},
 series = {TCLTK'96},
 year = {1996},
 location = {Monterey, California},
 pages = {15--15},
 numpages = {1},
 acmid = {1267513},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 